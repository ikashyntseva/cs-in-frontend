// 1. Необходимо написать регулярное выражение, которое при вызове test на строке будет давать false, если в строке есть символы отличные от латинских, цифр, подчеркивания и знака $
export const regExpStr = /[\w$_]/g;

// 2. Необходимо создать массив на основе строки, где раздилителем будут символы . , ; или пробелы (подряд идущие пробелы считаюся за один)
export const regExpSplit = /[(\s\.,;]+/g;

// 3. Необходимо написать функцию, которая принимает строковый шаблон и объект параметров, и возвращает результат применения данных к этому шаблону
export const format = (
  str: string,
  formatter: {
    [key: string]: any;
  }
): string =>
  str.replaceAll(/\$\{(\w+)\}/g, (...args) => formatter[args[1] || ""]);

// 4. Необходимо написать регулярное выражение, которое бы удаляла из строки любые дублирования подстрок из 1-го, 2-х или 3-х символов, которые идут подряд

export const regExpDeDuplicate = /([\s\S]{1,3}?)\1+/g;

// 5. Нахождение арифметических операций в строке и замена на результат
export const calc = (str:string) => {
  const regExpMath = /[\d(]+[ \d\-+()*\/]+[\d)]+/g
  return str.replace(regExpMath, s => eval(s))
}
